[{"C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\index.js":"1","C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\App.js":"2","C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\routes\\index.js":"4","C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\components\\Store\\reducer.js":"5","C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\components\\Header\\Header.js":"6","C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\pages\\Login\\Login.js":"7","C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\pages\\PrintPreparePage\\Prepare.js":"8","C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\pages\\PrintPreparePage\\PrintPrepare.js":"9","C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\pages\\HomePage\\Homepage.js":"10","C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\pages\\ChoosePrintPage\\ListPrinter.js":"11","C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\components\\Store\\action.js":"12","C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\components\\Search\\Search.js":"13","C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\pages\\Print\\Print.js":"14"},{"size":552,"mtime":1701448688386,"results":"15","hashOfConfig":"16"},{"size":1297,"mtime":1701586973761,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1701448688391,"results":"18","hashOfConfig":"16"},{"size":1555,"mtime":1701620786487,"results":"19","hashOfConfig":"16"},{"size":533,"mtime":1701586973770,"results":"20","hashOfConfig":"16"},{"size":5096,"mtime":1701620772798,"results":"21","hashOfConfig":"16"},{"size":6794,"mtime":1701586973783,"results":"22","hashOfConfig":"16"},{"size":13546,"mtime":1701612671117,"results":"23","hashOfConfig":"16"},{"size":5400,"mtime":1701609449558,"results":"24","hashOfConfig":"16"},{"size":8489,"mtime":1701586973780,"results":"25","hashOfConfig":"16"},{"size":12571,"mtime":1701612888478,"results":"26","hashOfConfig":"16"},{"size":190,"mtime":1701586973767,"results":"27","hashOfConfig":"16"},{"size":303,"mtime":1701586973765,"results":"28","hashOfConfig":"16"},{"size":30378,"mtime":1701620979694,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"pv21yt",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"33"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"33"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\index.js",[],[],["76","77","78","79","80","81"],"C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\App.js",[],[],"C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\routes\\index.js",["82"],[],"C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\components\\Store\\reducer.js",[],[],"C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\components\\Header\\Header.js",[],[],"C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\pages\\Login\\Login.js",[],[],"C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\pages\\PrintPreparePage\\Prepare.js",["83","84","85"],[],"import React, { useState, useRef } from 'react';\r\nimport './PrintPrepair.css';\r\nimport { Container, Row, Col, Form, Button, Modal } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PreparePrint = () => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n    const [showSuccessModal1, setShowSuccessModal1] = useState(false);\r\n    const [showErrorModal, setShowErrorModal] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const setDefaultCount = \"All\"\r\n    const [printConfig, setPrintConfig] = useState({\r\n        pageSize: 2,\r\n        duplex: 1,\r\n        copyCount: 1,\r\n    });\r\n    const handleFileChange = (e) => {\r\n\r\n        const file = e.target.files[0];\r\n\r\n        if (file && file.type === 'application/pdf') {\r\n            setSelectedFile(file);\r\n        } else {\r\n            setSelectedFile(null);\r\n            alert('Please select a valid PDF file.');\r\n        }\r\n    };\r\n\r\n    const handlePrintConfigChange = (field, value) => {\r\n        setPrintConfig((prevConfig) => ({\r\n            ...prevConfig,\r\n            [field]: value,\r\n        }));\r\n    };\r\n\r\n\r\n    const handleFileReset = () => {\r\n        setSelectedFile(null);\r\n    };\r\n    // const handleSelectPrinter = () => {\r\n\r\n    // };\r\n    const handleUpload = async () => {\r\n        try {\r\n            const accessToken = localStorage.getItem('accessToken');\r\n            console.log(accessToken);\r\n            if (accessToken) {\r\n\r\n                console.log(\"Test File\", selectedFile)\r\n\r\n                const formData = new FormData();\r\n                formData.append('file', selectedFile);\r\n                console.log(\"Data Test:\", [...formData]);\r\n                const responseApi = await axios.post(\r\n                    'http://localhost:8001/printing-setup/upload',\r\n                    formData,\r\n                    {\r\n\r\n                        headers: {\r\n                            'Content-Type': 'multipart/form-data', // Đặt loại nội dung là multipart/form-data\r\n                            Authorization: `Bearer ${accessToken}`,\r\n                        },\r\n                        withCredentials: true,\r\n                    }\r\n                );\r\n\r\n\r\n\r\n                console.log('Response from API:', responseApi.data);\r\n                setShowSuccessModal(true);\r\n                setTimeout(() => {\r\n                    setShowSuccessModal(false);\r\n                }, 2000);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setErrorMessage('File upload failed. Please try again.'); // Set an appropriate error message\r\n            setShowErrorModal(true);\r\n        }\r\n    };\r\n    const handleCloseSuccessModal = () => {\r\n        setShowSuccessModal(false);\r\n\r\n    };\r\n    const handleSetupConfig = async () => {\r\n        try {\r\n            // Gửi selectedFile lên API1\r\n            const accessToken = localStorage.getItem('accessToken');\r\n            console.log(accessToken);\r\n            if (accessToken) {\r\n                console.log(\"Test config\", printConfig.pageSize)\r\n\r\n                // const formData = new FormData();\r\n                // formData.append('PaperSize', printConfig.pageSize);\r\n                // // formData.append('IsTwoSide', printConfig.duplex);\r\n                // formData.append('IsTwoSide', Boolean(printConfig.duplex));\r\n                // formData.append('NumberCopy', printConfig.copyCount);\r\n\r\n                // console.log(\"Data\", [...formData]);\r\n                const configData = {\r\n                    PaperSize: printConfig.pageSize,\r\n                    IsTwoSide: Boolean(printConfig.duplex),\r\n                    NumberCopy: printConfig.copyCount,\r\n                };\r\n\r\n                console.log(\"Data\", configData);\r\n                const responseApi = await axios.post('http://localhost:8001/printing-setup/setup-config',\r\n                    configData, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${accessToken}`,\r\n                    },\r\n                    withCredentials: true,\r\n                });\r\n\r\n                console.log('Response from API:', responseApi.data);\r\n                setShowSuccessModal1(true);\r\n                setTimeout(() => {\r\n                    setShowSuccessModal1(false);\r\n                }, 2000);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setErrorMessage('Config setup failed. Please try again.'); // Set an appropriate error message\r\n            setShowErrorModal(true);\r\n        }\r\n    };\r\n    const handleChooseFile = (e) => {\r\n\r\n        // Clear the file input value to allow selecting the same file again\r\n        e.target.value = null;\r\n        e.target.click();\r\n\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setShowSuccessModal(false);\r\n        setShowErrorModal(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <Container className=\"mt-5\">\r\n            <Row className=\"mb-3\">\r\n                <Col xs={3}>\r\n                    <h2 className=\"mb-4\"   >Tải file lên hệ thống</h2> </Col>\r\n\r\n                {selectedFile ? (\r\n                    <Col xs={2} style={{ textAlign: 'right' }}>\r\n                        <Form.Control\r\n                            style={{ width: '53%' }}\r\n                            type=\"file\"\r\n                            accept=\".pdf\"\r\n                            onChange={handleFileChange}\r\n                        />\r\n                    </Col>\r\n\r\n                ) : (\r\n                    <Col xs={2}>\r\n                    </Col>\r\n                )}\r\n                <Col xs={2} style={{ textAlign: 'left' }}>\r\n                    <Button variant=\"primary\" onClick={handleUpload}>\r\n                        Upload File\r\n                    </Button></Col>\r\n                <Col style={{ textAlign: 'left' }} >  <h2 className=\"mb-4\"   >Thông số in </h2> </Col>\r\n                <Col xs={2} style={{}} >\r\n                    {/* Upload button */}\r\n                    <Button variant=\"primary\" onClick={handleSetupConfig}>\r\n                        Setup Config\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n                <Col xs={6} style={{ border: '1px solid', borderRadius: '10px' }}>\r\n                    {/* PDF Preview container */}\r\n                    {selectedFile ? (\r\n                        <iframe\r\n                            title=\"PDF Preview\"\r\n                            src={URL.createObjectURL(selectedFile)}\r\n                            width=\"100%\"\r\n                            height=\"600px\"\r\n                            border='1px solid black'\r\n                        />\r\n                    ) : (\r\n                        <div className='uploadFrame'>\r\n                            <div\r\n                                className=\"file-input-container\"\r\n                            >\r\n                                <Form.Control style={{ marginTop: '300px', marginBottom: '300px', marginLeft: '150px', width: '50%', }} type=\"file\" accept=\".pdf\" onChange={handleFileChange} />\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Col>\r\n                <Col xs={1}></Col>\r\n                <Col xs={5} className='printconfig'>\r\n                    {/* <div className='printconfig'> */}\r\n                    <Row>\r\n                        <Col xs={6}>\r\n                            <Form.Group controlId=\"pageSize\" style={{ marginTop: '10px' }}>\r\n                                <Form.Label>Kích thước trang:</Form.Label>\r\n                                <Form.Control\r\n                                    // type=\"number\"\r\n                                    as=\"select\"\r\n                                    className=\"text-center\"\r\n                                    value={printConfig.pageSize}\r\n                                    onChange={(e) => handlePrintConfigChange('pageSize', e.target.value)}\r\n                                >\r\n                                    <option value={2}>2</option>\r\n                                    <option value={3}>3</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col xs={6}>\r\n                            <Form.Group controlId=\"Count\" style={{ marginTop: '10px' }}>\r\n                                <Form.Label>Số trang in:</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    className=\"text-center\"\r\n                                    readOnly\r\n                                    value={setDefaultCount}\r\n\r\n                                >\r\n\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col xs={6}>\r\n                            <Form.Group controlId=\"duplex\" style={{ marginTop: '10px' }}>\r\n                                <Form.Label>In hai mặt:</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    type='boolean'\r\n                                    className=\"text-center\"\r\n                                    value={printConfig.duplex}\r\n                                    onChange={(e) => handlePrintConfigChange('duplex', parseInt(e.target.value))}\r\n                                >\r\n                                    <option value={1}>Có</option>\r\n                                    <option value={0}>Không</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col xs={6}>\r\n                            <Form.Group controlId=\"copyCount\" style={{ marginTop: '10px' }}>\r\n                                <Form.Label>Số bản sao:</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    className=\"text-center\"\r\n                                    value={printConfig.copyCount}\r\n                                    onChange={(e) => handlePrintConfigChange('copyCount', parseInt(e.target.value))}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{ marginTop: '100px' }} >\r\n                        {selectedFile && (\r\n                            <Row>\r\n                                <Col xs={12} md={6}>\r\n                                    <h2 className=\"mb-4 \" style={{ textAlign: 'left' }}> File in:</h2>\r\n                                    <span className='file'>{selectedFile.name}</span>\r\n                                </Col>\r\n                            </Row>\r\n                        )}\r\n                    </Row>\r\n                    <Row>\r\n                        <Link to='/listprinter'>\r\n                            <Button variant=\"primary\" >\r\n                                Chọn máy in\r\n                            </Button>\r\n                        </Link>\r\n\r\n                    </Row>\r\n\r\n\r\n                </Col>\r\n            </Row>\r\n            <Row style={{ height: '20px' }}>\r\n\r\n            </Row>\r\n            <Row>\r\n                {/* Success Modal */}\r\n                {/* <Modal show={showSuccessModal} onHide={handleCloseSuccessModal}>\r\n                    <Modal.Header className='modal-header'>\r\n                        <Modal.Title >File Uploaded Successfully!</Modal.Title>\r\n                    </Modal.Header>\r\n                </Modal> */}\r\n                <Modal show={showSuccessModal} onHide={handleCloseSuccessModal}>\r\n                    <Modal.Header className='modal-header'>\r\n                        <Modal.Title>Successful!</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {selectedFile && <p>File Uploaded Successfully: {selectedFile.name}</p>}\r\n\r\n                    </Modal.Body>\r\n\r\n                </Modal>\r\n                <Modal show={showSuccessModal1} onHide={handleCloseSuccessModal}>\r\n                    <Modal.Header className='modal-header'>\r\n                        <Modal.Title>Successful!</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p>Configuration Setup Successful</p>\r\n                    </Modal.Body>\r\n\r\n                </Modal>\r\n                <Modal show={showErrorModal} onHide={handleCloseModal}>\r\n                    <Modal.Header className='modal-header-error'>\r\n                        <Modal.Title>Error!</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>{errorMessage}</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleCloseModal}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </Row>\r\n\r\n            {/* Display selected file variable */}\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default PreparePrint;\r\n","C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\pages\\PrintPreparePage\\PrintPrepare.js",[],[],"C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\pages\\HomePage\\Homepage.js",["86"],[],"import Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Header from './../../components/Header/Header.js'\r\n// import CountdownTimer from '../../components/CountdownTimer/CountdownTimer'\r\nimport './Homepage.css'\r\n\r\nconst HomePage = ({ isLoggedIn, setIsLoggedIn }) => {\r\n    const slide1 = require('./../../assets/Image/slide1.png')\r\n    const build = require('./../../assets/Image/building.png')\r\n    const crowd = require('./../../assets/Image/crowd-of-users.png')\r\n    const add = require('./../../assets/Image/add.png')\r\n    const square = require('./../../assets/Image/square.png')\r\n    const gg = require('./../../assets/Image/google-maps.png')\r\n    const call = require('./../../assets/Image/call.png')\r\n    const logoBK = require('./../../assets/Image/logoBK.png')\r\n\r\n    // const FIFTEEN_MINUTE_IN_MS = 15 * 60 * 1000;\r\n    // const NOW_IN_MS = new Date().getTime();\r\n\r\n    // const dateTimeAfterThreeDays = NOW_IN_MS + FIFTEEN_MINUTE_IN_MS;\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Row xs={12}>\r\n                    <Row>\r\n                        {/* Demo of using time counter UI */}\r\n                        <Container>\r\n                            <img src={logoBK} alt='' className='logoBK' />\r\n                            <img src={slide1} alt=\"\" className='container' />\r\n                        </Container>\r\n                    </Row>\r\n                    <Row>\r\n\r\n                        <div className='container slide2'>\r\n                            <h1 className='title'>BACH KHOA SMARTPRINTING SERVICES</h1>\r\n                            <Row>\r\n                                <Col xs={3}></Col>\r\n                                <Col xs={2} style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                    <img src={build} alt=\"\" style={{ width: '33px', height: '29px' }}></img>\r\n                                    <p className='text' > 2 Cơ sở</p>\r\n                                </Col >\r\n                                <Col xs={2} style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                    <img src={crowd} alt=\"\" style={{ width: '33px', height: '29px' }}></img>\r\n                                    <p className='text' > 6000+ Sinh viên</p>\r\n                                </Col>\r\n                                <Col xs={2} style={{ display: 'flex', justifyContent: 'center' }}  >\r\n                                    <img src={add} alt=\"\" style={{ width: '33px', height: '29px' }}></img>\r\n                                    <p className='text' >1234 Người theo dõi</p></Col>\r\n\r\n                            </Row>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className='style information'>\r\n                            <div style={{ width: '1320px' }}>\r\n                                <div style={{ width: '900px' }} >\r\n                                    <div style={{ height: '40px', backgroundColor: '#2162c2' }}>\r\n                                        <h1 className='title1'>Thông tin chung</h1>\r\n                                    </div>\r\n                                    <div className='text1 style'>\r\n\r\n                                        {/* <CountdownTimer targetDate={dateTimeAfterThreeDays} /> */}\r\n                                        <p className='p' style={{ margin: '35px 50px 10px 50px' }}>Student Smart Printing Service là dịch vụ in in dành cho sinh viên cho phép bạn in từ xa tới bất kỳ máy in nào bạn chọn. </p>\r\n                                        <p className='p' style={{ margin: '0 50px 10px' }}>          Máy in được đặt ở vị trí thuận tiện tại nhiều địa điểm khác nhau trong khuôn viên trường, bao gồm tất cả các thư viện và tòa nhà trong khuôn viên trường.</p>\r\n                                        <p className='p' style={{ margin: '10px 50px 0px' }}>Student Smart Printing Service cho phép sinh viên:</p>\r\n                                        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <img src={square} alt='' className='square' />\r\n                                            <p className='p' style={{ margin: ' 20px 0px 0px 16px' }}>Gửi lệnh in trực tiếp.</p>\r\n                                        </div>\r\n                                        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <img src={square} alt='' className='square' />\r\n                                            <p className='p' style={{ margin: ' 20px 0px 0px 16px' }}>In miễn phí tối đa 600 trang mỗi học kì. Có thể mua thêm theo nhu cầu.</p>\r\n                                        </div>\r\n                                        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <img src={square} alt='' className='square' />\r\n                                            <p className='p' style={{ margin: ' 20px 0px 0px 16px' }}>Bảo mật và riêng tư. Chỉ có bạn mới có thể in và xem lịch sử của mình.</p>\r\n                                        </div>\r\n                                        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <img src={square} alt='' className='square' />\r\n                                            <p className='p' style={{ margin: ' 20px 0px 0px 16px' }}>Mỗi lệnh in được mặc định là in hai mặt để tiết kiệm giấy.</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='right' style={{ width: '360px' }} >\r\n                                <div style={{ height: '40px', backgroundColor: '#2162c2' }} >\r\n                                    <h1 className='title1'>Thông tin liên hệ</h1>\r\n                                </div>\r\n                                <div className='text1 style'>\r\n                                    <div style={{ display: 'flex' }}>\r\n                                        <img src={gg} alt='' className='gg' />\r\n                                        <p className='p' style={{ margin: '35px 10px 5px 10px' }}>Vị trí văn phòng</p>\r\n                                    </div>\r\n                                    <div style={{ display: 'flex' }}>\r\n                                        <img src={square} alt='' className='square' />\r\n                                        <p className='pq' style={{ margin: '13px 0px 0px 10px' }}>Cơ sở 1: Lý Trường Kiệt, Q10, Tp.HCM</p>\r\n                                    </div>\r\n                                    <div style={{ display: 'flex' }}>\r\n                                        <img src={square} alt='' className='square' />\r\n                                        <p className='pq' style={{ margin: '13px 0px 0px 10px' }}>Cơ sở 2: Dĩ An, Bình Dương</p>\r\n                                    </div>\r\n                                    <div style={{ display: 'flex' }}>\r\n                                        <img src={call} alt='' className='call' />\r\n                                        <p className='p' style={{ margin: '20px 10px 5px 10px' }}>Liên hệ</p>\r\n                                    </div>\r\n                                    <div style={{ display: 'flex' }}>\r\n                                        <img src={square} alt='' className='square' />\r\n                                        <p className='pq' style={{ margin: '13px 0px 0px 10px' }}>Email: pdt@hcmut.edu.vn</p>\r\n                                    </div>\r\n                                    <div style={{ display: 'flex' }}>\r\n                                        <img src={square} alt='' className='square' />\r\n                                        <p className='pq' style={{ margin: '13px 0px 0px 10px' }}>Phone: 0288 345 345</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Row>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n\r\n    )\r\n}\r\nexport default HomePage","C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\pages\\ChoosePrintPage\\ListPrinter.js",["87","88"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Container from \"react-bootstrap/Container\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Col from \"react-bootstrap/Col\"\r\nimport Modal from \"react-bootstrap/Modal\"\r\nimport Buttons from \"react-bootstrap/Button\"\r\n\r\n// import ReactSearchBox from \"react-search-box\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\r\nimport './ListPrint.css'\r\nimport SearchBox from \"../../components/Search/Search\";\r\n\r\nconst ListPrinter = () => {\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const itemsPerPage = 8;\r\n\r\n    const [printer, setPrinter] = useState([]);\r\n    const [choossePrinter, setChoosePrinter] = useState([]);\r\n    const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n    const [showErrorModal, setShowErrorModal] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    useEffect(() => {\r\n        const accessToken = localStorage.getItem('accessToken');\r\n        if (accessToken) {\r\n            axios.get('http://localhost:8001/printing-setup/get-list-printer', {\r\n                headers: {\r\n\r\n                    Authorization: `Bearer ${accessToken}`,\r\n\r\n                },\r\n                withCredentials: true,\r\n            })\r\n                .then((response) => {\r\n                    console.log('List Printer:', response.data);\r\n                    setPrinter(response.data);\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error fetching user profile:', error);\r\n                });\r\n        }\r\n\r\n    }, []);\r\n\r\n\r\n    const [searchKeyword, setSearchKeyword] = useState('');\r\n\r\n    const handleNextPage = () => {\r\n        setCurrentPage((prevPage) => prevPage + 1);\r\n    };\r\n\r\n    const handlePreviousPage = () => {\r\n        setCurrentPage((prevPage) => prevPage - 1);\r\n    };\r\n\r\n    const handleSearch = (keyword) => {\r\n        setCurrentPage(1); // Reset trang về 1 khi bắt đầu tìm kiếm mới\r\n        const searchString = keyword.toString().toLowerCase();\r\n        setSearchKeyword(searchString);\r\n    };\r\n\r\n    const filteredPrinters = printer.filter((printer) => {\r\n        const mainInfoMatch = Object.values(printer).some((value) =>\r\n            typeof value === 'string' && value.toLowerCase().includes(searchKeyword.toLowerCase())\r\n        );\r\n        const locationMatch = Object.values(printer.location).some((value) =>\r\n            typeof value === 'string' && value.toLowerCase().includes(searchKeyword.toLowerCase())\r\n        );\r\n        const locationString = `${printer.location.BuildingLocation}_${printer.location.RoomLocation}`;\r\n        const locationMatch1 = typeof locationString === 'string' && locationString.toLowerCase().includes(searchKeyword.toLowerCase());\r\n        return mainInfoMatch || locationMatch || locationMatch1;\r\n        // return mainInfoMatch;\r\n    }\r\n    );\r\n    const totalFilteredResults = filteredPrinters.length;\r\n\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n\r\n    const totalPages = Math.ceil(totalFilteredResults / itemsPerPage);\r\n    const pageNumbers = Array.from({ length: totalPages }, (_, index) => index + 1);\r\n\r\n\r\n    const displayedPrinters = filteredPrinters.slice(startIndex, endIndex);\r\n\r\n    const handleChoosePrinter = async (id) => {\r\n        try {\r\n            const accessToken = localStorage.getItem('accessToken');\r\n            // console.log(accessToken);\r\n            if (accessToken) {\r\n\r\n                const PrinterToChoose = printer.find((print) => print._id === id);\r\n\r\n                if (PrinterToChoose && PrinterToChoose.location) {\r\n                    const dataJson = {\r\n                        CampusLocation: PrinterToChoose.location.CampusLocation,\r\n                        BuildingLocation: PrinterToChoose.location.BuildingLocation,\r\n                        RoomLocation: PrinterToChoose.location.RoomLocation,\r\n\r\n                    };\r\n\r\n\r\n\r\n                    console.log(\"Data printer:\", dataJson);\r\n\r\n                    const responseApi = await axios.post(\r\n                        'http://localhost:8001/printing-setup/set-printer',\r\n                        dataJson,\r\n                        {\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                                Authorization: `Bearer ${accessToken}`,\r\n                            },\r\n\r\n                            withCredentials: true,\r\n                        }\r\n                    );\r\n\r\n                    console.log('Response from API:', responseApi.data);\r\n                    setShowSuccessModal(true);\r\n                    setTimeout(() => {\r\n                        setShowSuccessModal(false);\r\n                    }, 2000);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setErrorMessage('Choose Printer failed. Please try again.'); // Set an appropriate error message\r\n            setShowErrorModal(true);\r\n        }\r\n    };\r\n\r\n    const handleCloseSuccessModal = () => {\r\n        setShowSuccessModal(false);\r\n\r\n    };\r\n    const handleCloseModal = () => {\r\n        setShowSuccessModal(false);\r\n        setShowErrorModal(false);\r\n    };\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <Row xs={12}>\r\n                <Row style={{ marginTop: '30px' }}>\r\n                    <strong style={{ textAlign: \"left\", fontSize: \"20px\", fontWeight: \"500\" }}>Trở lại</strong>\r\n                </Row>\r\n                <Row style={{ marginTop: '30px' }}>\r\n\r\n                    <Row>\r\n                        <Col xs={1}></Col>\r\n                        <Col xs={5} style={{ display: \"flex\" }}>\r\n                            <strong style={{ textAlign: \"left\", fontSize: \"40px\", fontWeight: \"700\" }}>MÁY IN KHẢ DỤNG</strong>\r\n                        </Col>\r\n                        <Col xs={5} style={{ display: \"flex\", alignItems: 'right' }}>\r\n                            <Col xs={10} style={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center', flexDirection: 'column'\r\n                            }} >\r\n\r\n                                <SearchBox style={{ borderRadius: '8px' }} onSearch={handleSearch} />\r\n\r\n                            </Col>\r\n                            <Col style={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center', flexDirection: 'column'\r\n                            }} xs={2}>\r\n                                <Button variant=\"outlined\" color=\"primary\" style={{ width: \"80px\", marginRight: \"20px\" }}>Search</Button>\r\n                            </Col>\r\n                        </Col>\r\n                        <Col xs={1}></Col>\r\n\r\n                    </Row>\r\n                    <Row style={{ width: \"102%\", marginTop: \"30px\" }}>\r\n                        <Col xs={1}></Col>\r\n                        <Col xs={10}>\r\n                            <TableContainer component={Paper} style={{ border: \"3px solid grey\" }}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow style={{ backgroundColor: '#3C8DBC', textAlign: 'center', padding: '5px' }} >\r\n                                            <TableCell id=\"text\" >Model</TableCell>\r\n                                            {/* <TableCell id=\"text\" >ID</TableCell> */}\r\n                                            <TableCell id=\"text\" >CƠ SỞ</TableCell>\r\n                                            <TableCell id=\"text\" > VỊ TRÍ</TableCell>\r\n                                            <TableCell id=\"text\" >TÌNH TRẠNG</TableCell>\r\n                                            <TableCell id=\"text\" >Action</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {displayedPrinters.map((printer) => (\r\n                                            <TableRow key={printer._id}>\r\n                                                <TableCell id=\"text_list\">{printer.PrinterModel}</TableCell>\r\n                                                {/* <TableCell id=\"text_list\">{printer.id}</TableCell> */}\r\n                                                <TableCell id=\"text_list\">{printer.location.CampusLocation}</TableCell>\r\n                                                {/* <TableCell id=\"text_list\">{printer.location.BuildingLocation} {printer.location.RoomLocation}</TableCell> */}\r\n                                                <TableCell id=\"text_list\">{`${printer.location.BuildingLocation}_${printer.location.RoomLocation}`}</TableCell>\r\n\r\n                                                {/* <TableCell id=\"text_list\">{printer.status}</TableCell> */}\r\n\r\n                                                <TableCell id=\"text_list\" style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                                    <span className={`status-indicator ${printer.PrinterStatus}`} />\r\n\r\n                                                </TableCell>\r\n                                                <TableCell id=\"text_list\" align=\"center\" >\r\n\r\n                                                    <Button id=\"text_r\" style={{ padding: '2px' }} onClick={() => handleChoosePrinter(printer._id)}\r\n                                                    >Chọn</Button>\r\n\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Col>\r\n                        <Col xs={1} ></Col>\r\n\r\n                    </Row>\r\n\r\n\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"15px\" }}>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            // color=\"success\"\r\n                            style={{ marginRight: \"10px\" }}\r\n                            onClick={handlePreviousPage}\r\n                            disabled={currentPage === 1}\r\n                        >\r\n                            Previous\r\n                        </Button>\r\n                        {pageNumbers.map((number) => (\r\n                            <Button\r\n                                key={number}\r\n                                variant={number === currentPage ? \"contained\" : \"outlined\"}\r\n                                // color=\"success\"\r\n                                style={{ marginRight: \"10px\" }}\r\n                                onClick={() => setCurrentPage(number)}\r\n                            >\r\n                                {number}\r\n                            </Button>\r\n                        ))}\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            // color=\"success\"\r\n                            onClick={handleNextPage}\r\n                            disabled={endIndex >= totalFilteredResults}\r\n                        >\r\n                            Next\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Row>\r\n            <Modal show={showSuccessModal} onHide={handleCloseSuccessModal}>\r\n                <Modal.Header className='modal-header'>\r\n                    <Modal.Title>Successful!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Gửi file in thành công</p>\r\n\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n\r\n            <Modal show={showErrorModal} onHide={handleCloseModal}>\r\n                <Modal.Header className='modal-header-error'>\r\n                    <Modal.Title>Error!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{errorMessage}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Buttons variant=\"secondary\" onClick={handleCloseModal}>\r\n                        Close\r\n                    </Buttons>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n        </Container>\r\n    )\r\n};\r\n\r\n\r\nexport default ListPrinter;","C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\components\\Store\\action.js",[],[],"C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\components\\Search\\Search.js",[],[],"C:\\Users\\Hi\\Desktop\\BTL_CNPMMM\\Smart-Printing-Service\\frontend\\src\\pages\\Print\\Print.js",["89"],[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":7,"column":8,"nodeType":"104","messageId":"105","endLine":7,"endColumn":20},{"ruleId":"102","severity":1,"message":"106","line":1,"column":27,"nodeType":"104","messageId":"105","endLine":1,"endColumn":33},{"ruleId":"102","severity":1,"message":"107","line":39,"column":11,"nodeType":"104","messageId":"105","endLine":39,"endColumn":26},{"ruleId":"102","severity":1,"message":"108","line":130,"column":11,"nodeType":"104","messageId":"105","endLine":130,"endColumn":27},{"ruleId":"102","severity":1,"message":"109","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":14},{"ruleId":"102","severity":1,"message":"110","line":20,"column":12,"nodeType":"104","messageId":"105","endLine":20,"endColumn":26},{"ruleId":"102","severity":1,"message":"111","line":20,"column":28,"nodeType":"104","messageId":"105","endLine":20,"endColumn":44},{"ruleId":"102","severity":1,"message":"107","line":138,"column":11,"nodeType":"104","messageId":"105","endLine":138,"endColumn":26},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["112"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'PrintPrepare' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'handleFileReset' is assigned a value but never used.","'handleChooseFile' is assigned a value but never used.","'Header' is defined but never used.","'choossePrinter' is assigned a value but never used.","'setChoosePrinter' is assigned a value but never used.","no-object-constructor"]